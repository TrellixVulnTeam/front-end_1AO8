import { LoggerConfig } from './logger.config';
export class NGXLoggerConfigEngine {
    constructor(config) {
        this.config = config;
        this._config = config;
    }
    /** Get a readonly access to the level configured for the NGXLogger */
    get level() {
        return this._config.level;
    }
    /** Get a readonly access to the serverLogLevel configured for the NGXLogger */
    get serverLogLevel() {
        return this._config.serverLogLevel;
    }
    updateConfig(config) {
        this._config = this._clone(config);
    }
    getConfig() {
        return this._clone(this._config);
    }
    // TODO: add tests around cloning the config. updating an object passed into the config (or retrieving from the config)
    // should not update the active config, this is a shallow clone. If our config ever becomes hierarchical we must make
    // this a deep clone
    _clone(object) {
        const cloneConfig = new LoggerConfig();
        Object.keys(object).forEach((key) => {
            cloneConfig[key] = object[key];
        });
        return cloneConfig;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmVuZ2luZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvY29uZmlnLmVuZ2luZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFHN0MsTUFBTSxPQUFPLHFCQUFxQjtJQUdoQyxZQUFxQixNQUFvQjtRQUFwQixXQUFNLEdBQU4sTUFBTSxDQUFjO1FBQ3ZDLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO0lBQ3hCLENBQUM7SUFFRCxzRUFBc0U7SUFDdEUsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztJQUM1QixDQUFDO0lBRUQsK0VBQStFO0lBQy9FLElBQUksY0FBYztRQUNoQixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxZQUFZLENBQUMsTUFBb0I7UUFDL0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxTQUFTO1FBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsdUhBQXVIO0lBQ3ZILHFIQUFxSDtJQUNySCxvQkFBb0I7SUFDWixNQUFNLENBQUMsTUFBVztRQUN4QixNQUFNLFdBQVcsR0FBaUIsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUVyRCxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFO1lBQ2xDLFdBQVcsQ0FBQyxHQUFHLENBQUMsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDakMsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLFdBQVcsQ0FBQztJQUNyQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0xvZ2dlckNvbmZpZ30gZnJvbSAnLi9sb2dnZXIuY29uZmlnJztcclxuaW1wb3J0IHsgTmd4TG9nZ2VyTGV2ZWwgfSBmcm9tICcuL3R5cGVzL2xvZ2dlci1sZXZlbC5lbnVtJztcclxuXHJcbmV4cG9ydCBjbGFzcyBOR1hMb2dnZXJDb25maWdFbmdpbmUge1xyXG5cclxuICBwcml2YXRlIF9jb25maWc6IExvZ2dlckNvbmZpZztcclxuICBjb25zdHJ1Y3RvcihyZWFkb25seSBjb25maWc6IExvZ2dlckNvbmZpZykge1xyXG4gICAgdGhpcy5fY29uZmlnID0gY29uZmlnO1xyXG4gIH1cclxuXHJcbiAgLyoqIEdldCBhIHJlYWRvbmx5IGFjY2VzcyB0byB0aGUgbGV2ZWwgY29uZmlndXJlZCBmb3IgdGhlIE5HWExvZ2dlciAqL1xyXG4gIGdldCBsZXZlbCgpOiBOZ3hMb2dnZXJMZXZlbCB7XHJcbiAgICByZXR1cm4gdGhpcy5fY29uZmlnLmxldmVsO1xyXG4gIH1cclxuXHJcbiAgLyoqIEdldCBhIHJlYWRvbmx5IGFjY2VzcyB0byB0aGUgc2VydmVyTG9nTGV2ZWwgY29uZmlndXJlZCBmb3IgdGhlIE5HWExvZ2dlciAqL1xyXG4gIGdldCBzZXJ2ZXJMb2dMZXZlbCgpOiBOZ3hMb2dnZXJMZXZlbCB7XHJcbiAgICByZXR1cm4gdGhpcy5fY29uZmlnLnNlcnZlckxvZ0xldmVsO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlQ29uZmlnKGNvbmZpZzogTG9nZ2VyQ29uZmlnKSB7XHJcbiAgICB0aGlzLl9jb25maWcgPSB0aGlzLl9jbG9uZShjb25maWcpO1xyXG4gIH1cclxuXHJcbiAgZ2V0Q29uZmlnKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2Nsb25lKHRoaXMuX2NvbmZpZyk7XHJcbiAgfVxyXG5cclxuICAvLyBUT0RPOiBhZGQgdGVzdHMgYXJvdW5kIGNsb25pbmcgdGhlIGNvbmZpZy4gdXBkYXRpbmcgYW4gb2JqZWN0IHBhc3NlZCBpbnRvIHRoZSBjb25maWcgKG9yIHJldHJpZXZpbmcgZnJvbSB0aGUgY29uZmlnKVxyXG4gIC8vIHNob3VsZCBub3QgdXBkYXRlIHRoZSBhY3RpdmUgY29uZmlnLCB0aGlzIGlzIGEgc2hhbGxvdyBjbG9uZS4gSWYgb3VyIGNvbmZpZyBldmVyIGJlY29tZXMgaGllcmFyY2hpY2FsIHdlIG11c3QgbWFrZVxyXG4gIC8vIHRoaXMgYSBkZWVwIGNsb25lXHJcbiAgcHJpdmF0ZSBfY2xvbmUob2JqZWN0OiBhbnkpIHtcclxuICAgIGNvbnN0IGNsb25lQ29uZmlnOiBMb2dnZXJDb25maWcgPSBuZXcgTG9nZ2VyQ29uZmlnKCk7XHJcblxyXG4gICAgT2JqZWN0LmtleXMob2JqZWN0KS5mb3JFYWNoKChrZXkpID0+IHtcclxuICAgICAgY2xvbmVDb25maWdba2V5XSA9IG9iamVjdFtrZXldO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIGNsb25lQ29uZmlnO1xyXG4gIH1cclxufVxyXG4iXX0=