import { Injectable } from '@angular/core';
import { HttpBackend, HttpRequest, HttpResponse } from '@angular/common/http';
import { filter, map } from 'rxjs/operators';
export class NGXLoggerHttpService {
    constructor(httpBackend) {
        this.httpBackend = httpBackend;
    }
    logOnServer(url, log, options) {
        // HttpBackend skips all HttpInterceptors
        // They may log errors using this service causing circular calls
        const req = new HttpRequest('POST', url, log, options || {});
        return this.httpBackend.handle(req).pipe(filter(e => e instanceof HttpResponse), map((httpResponse) => httpResponse.body));
    }
}
NGXLoggerHttpService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
NGXLoggerHttpService.ctorParameters = () => [
    { type: HttpBackend }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9odHRwLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUMsV0FBVyxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUU1RSxPQUFPLEVBQUMsTUFBTSxFQUFFLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBTTNDLE1BQU0sT0FBTyxvQkFBb0I7SUFDL0IsWUFBNkIsV0FBd0I7UUFBeEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7SUFBSSxDQUFDO0lBRTFELFdBQVcsQ0FBQyxHQUFXLEVBQUUsR0FBb0IsRUFBRSxPQUFlO1FBQzVELHlDQUF5QztRQUN6QyxnRUFBZ0U7UUFDaEUsTUFBTSxHQUFHLEdBQUcsSUFBSSxXQUFXLENBQU0sTUFBTSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsT0FBTyxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBQ2xFLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUN0QyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLFlBQVksWUFBWSxDQUFDLEVBQ3RDLEdBQUcsQ0FBeUIsQ0FBQyxZQUErQixFQUFFLEVBQUUsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQ3BGLENBQUM7SUFDSixDQUFDOzs7WUFaRixVQUFVOzs7O1lBUEgsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtIdHRwQmFja2VuZCwgSHR0cFJlcXVlc3QsIEh0dHBSZXNwb25zZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7ZmlsdGVyLCBtYXB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcclxuaW1wb3J0IHsgTkdYTG9nSW50ZXJmYWNlIH0gZnJvbSAnLi90eXBlcy9uZ3gtbG9nLmludGVyZmFjZSc7XHJcblxyXG5cclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIE5HWExvZ2dlckh0dHBTZXJ2aWNlIHtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGh0dHBCYWNrZW5kOiBIdHRwQmFja2VuZCkgeyB9XHJcblxyXG4gIGxvZ09uU2VydmVyKHVybDogc3RyaW5nLCBsb2c6IE5HWExvZ0ludGVyZmFjZSwgb3B0aW9uczogb2JqZWN0KTogT2JzZXJ2YWJsZTxhbnk+IHtcclxuICAgIC8vIEh0dHBCYWNrZW5kIHNraXBzIGFsbCBIdHRwSW50ZXJjZXB0b3JzXHJcbiAgICAvLyBUaGV5IG1heSBsb2cgZXJyb3JzIHVzaW5nIHRoaXMgc2VydmljZSBjYXVzaW5nIGNpcmN1bGFyIGNhbGxzXHJcbiAgICBjb25zdCByZXEgPSBuZXcgSHR0cFJlcXVlc3Q8YW55PignUE9TVCcsIHVybCwgbG9nLCBvcHRpb25zIHx8IHt9KTtcclxuICAgIHJldHVybiB0aGlzLmh0dHBCYWNrZW5kLmhhbmRsZShyZXEpLnBpcGUoXHJcbiAgICAgIGZpbHRlcihlID0+IGUgaW5zdGFuY2VvZiBIdHRwUmVzcG9uc2UpLFxyXG4gICAgICBtYXA8SHR0cFJlc3BvbnNlPGFueT4sIGFueT4oKGh0dHBSZXNwb25zZTogSHR0cFJlc3BvbnNlPGFueT4pID0+IGh0dHBSZXNwb25zZS5ib2R5KVxyXG4gICAgKTtcclxuICB9XHJcblxyXG59XHJcbiJdfQ==