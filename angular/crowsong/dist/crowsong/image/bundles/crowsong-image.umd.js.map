{"version":3,"file":"crowsong-image.umd.js","sources":["../../../../projects/crowsong/image/src/lib/crop/image-crop.component.ts","../../../../projects/crowsong/image/src/lib/crop/image-crop.component.html","../../../../projects/crowsong/image/src/lib/display/image-display.component.ts","../../../../projects/crowsong/image/src/lib/display/image-display.component.html","../../../../projects/crowsong/image/src/lib/upload/image-upload.component.ts","../../../../projects/crowsong/image/src/lib/upload/image-upload.component.html","../../../../projects/crowsong/image/src/lib/image.module.ts","../../../../projects/crowsong/image/src/public-api.ts","../../../../projects/crowsong/image/src/crowsong-image.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-crop',\r\n  templateUrl: './image-crop.component.html'\r\n})\r\nexport class ImageCropComponent implements OnInit {\r\n\r\n  constructor() { };\r\n\r\n  ngOnInit(): void { };\r\n}\r\n","<p>crop works!</p>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n/* NGX Logger */\r\nimport { NGXLogger} from 'ngx-logger';\r\n\r\n@Component({\r\n  selector: 'lib-image',\r\n  templateUrl: './image-display.component.html',\r\n  styleUrls: ['./image-display.component.scss']\r\n})\r\nexport class ImageDisplayComponent implements OnInit {\r\n  /* Image Attributes */\r\n  @Input() alt: string = '';\r\n  @Input() sizes: string = '';\r\n  @Input() srcset: string = '';\r\n  @Input() usemap: string = '';\r\n  \r\n  /* Angular Bindings */\r\n  @Input() src: string = '';\r\n  @Input() class: string = '';\r\n  @Input() styles: string = '';\r\n  \r\n  /* Image Width */\r\n  @Input() width: string = '';\r\n  @Input() maxWidth: string = '100%';\r\n\r\n  /* Image Height */\r\n  @Input() height: string = 'auto';\r\n  @Input() maxHeight: string = '';\r\n  \r\n  constructor(private logger: NGXLogger) {};\r\n\r\n  ngOnInit(): void {\r\n    this.logger.debug('-------------------------');\r\n    this.logger.debug('- @crowsong/image -');\r\n    this.logger.debug('- ImageDisplayComponent -');\r\n    this.logger.debug('-------------------------');\r\n    this.logger.debug('- Image Properties -');\r\n    this.logger.debug('alt: ', this.alt);\r\n    this.logger.debug('sizes: ', this.sizes);\r\n    this.logger.debug('srcset: ', this.srcset);\r\n    this.logger.debug('usemap: ', this.usemap);\r\n    this.logger.debug('height: ', this.height);\r\n    this.logger.debug('maxHeight: ', this.maxHeight);\r\n    this.logger.debug('width: ', this.width);\r\n    this.logger.debug('maxWidth: ', this.maxWidth);\r\n    this.logger.debug('- Image Style Properties -');\r\n    this.logger.debug('class: ', this.class);\r\n    this.logger.debug('styles: ', this.styles);\r\n  };\r\n}\r\n","<img \r\n[style]=\"styles\" \r\n[ngClass]=\"class\" \r\n[src]=\"src\" \r\n[style.max-width]=\"maxWidth\"\r\n[style.height]=\"maxHeight\"/>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-upload',\r\n  templateUrl: './image-upload.component.html'\r\n})\r\nexport class ImageUploadComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>upload works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ImageCropperModule } from 'ngx-image-cropper';\r\n\r\nimport { ImageCropComponent } from './crop/image-crop.component';\r\nimport { ImageDisplayComponent } from './display/image-display.component';\r\nimport { ImageUploadComponent } from './upload/image-upload.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ImageCropComponent,\r\n    ImageDisplayComponent,\r\n    ImageUploadComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ImageCropperModule\r\n  ],\r\n  exports: [\r\n    ImageCropComponent,\r\n    ImageDisplayComponent,\r\n    ImageUploadComponent\r\n  ]\r\n})\r\nexport class ImageModule { }\r\n","/*\r\n * Public API Surface of image\r\n */\r\nexport * from './lib/crop/image-crop.component';\r\nexport * from './lib/display/image-display.component';\r\nexport * from './lib/upload/image-upload.component';\r\nexport * from './lib/image.module';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0","Component","Input","CommonModule","ImageCropperModule","NgModule"],"mappings":"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"}