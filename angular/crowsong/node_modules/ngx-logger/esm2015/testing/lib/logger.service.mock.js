import { LoggerConfig } from 'ngx-logger';
import { Injectable } from "@angular/core";
export class NGXLoggerMock {
    constructor() {
    }
    trace(message, ...additional) {
    }
    debug(message, ...additional) {
    }
    info(message, ...additional) {
    }
    log(message, ...additional) {
    }
    warn(message, ...additional) {
    }
    error(message, ...additional) {
    }
    fatal(message, ...additional) {
    }
    updateConfig(config) {
    }
    setCustomHttpHeaders(headers) {
    }
    setCustomParams(params) {
    }
    registerMonitor(monitor) {
    }
    setWithCredentialsOptionValue(withCredentials) {
    }
    getConfigSnapshot() {
        return new LoggerConfig();
    }
}
NGXLoggerMock.decorators = [
    { type: Injectable }
];
/** @nocollapse */
NGXLoggerMock.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLnNlcnZpY2UubW9jay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Rlc3Rpbmcvc3JjL2xpYi9sb2dnZXIuc2VydmljZS5tb2NrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBQyxZQUFZLEVBQW1CLE1BQU0sWUFBWSxDQUFDO0FBQzFELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsTUFBTSxPQUFPLGFBQWE7SUFFeEI7SUFDQSxDQUFDO0lBRUQsS0FBSyxDQUFDLE9BQVksRUFBRSxHQUFHLFVBQWlCO0lBQ3hDLENBQUM7SUFFRCxLQUFLLENBQUMsT0FBWSxFQUFFLEdBQUcsVUFBaUI7SUFDeEMsQ0FBQztJQUVELElBQUksQ0FBQyxPQUFZLEVBQUUsR0FBRyxVQUFpQjtJQUN2QyxDQUFDO0lBRUQsR0FBRyxDQUFDLE9BQVksRUFBRSxHQUFHLFVBQWlCO0lBQ3RDLENBQUM7SUFFRCxJQUFJLENBQUMsT0FBWSxFQUFFLEdBQUcsVUFBaUI7SUFDdkMsQ0FBQztJQUVELEtBQUssQ0FBQyxPQUFZLEVBQUUsR0FBRyxVQUFpQjtJQUN4QyxDQUFDO0lBRUQsS0FBSyxDQUFDLE9BQVksRUFBRSxHQUFHLFVBQWlCO0lBQ3hDLENBQUM7SUFFRCxZQUFZLENBQUMsTUFBVztJQUV4QixDQUFDO0lBRUQsb0JBQW9CLENBQUMsT0FBb0I7SUFDekMsQ0FBQztJQUVELGVBQWUsQ0FBQyxNQUFrQjtJQUNsQyxDQUFDO0lBRUQsZUFBZSxDQUFDLE9BQXlCO0lBQ3pDLENBQUM7SUFFRCw2QkFBNkIsQ0FBQyxlQUF3QjtJQUN0RCxDQUFDO0lBRUQsaUJBQWlCO1FBQ2YsT0FBTyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBQzVCLENBQUM7OztZQTdDRixVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtIdHRwSGVhZGVycywgSHR0cFBhcmFtc30gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQge0xvZ2dlckNvbmZpZywgTkdYTG9nZ2VyTW9uaXRvcn0gZnJvbSAnbmd4LWxvZ2dlcic7XHJcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgTkdYTG9nZ2VyTW9jayB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gIH1cclxuXHJcbiAgdHJhY2UobWVzc2FnZTogYW55LCAuLi5hZGRpdGlvbmFsOiBhbnlbXSkge1xyXG4gIH1cclxuXHJcbiAgZGVidWcobWVzc2FnZTogYW55LCAuLi5hZGRpdGlvbmFsOiBhbnlbXSkge1xyXG4gIH1cclxuXHJcbiAgaW5mbyhtZXNzYWdlOiBhbnksIC4uLmFkZGl0aW9uYWw6IGFueVtdKSB7XHJcbiAgfVxyXG5cclxuICBsb2cobWVzc2FnZTogYW55LCAuLi5hZGRpdGlvbmFsOiBhbnlbXSkge1xyXG4gIH1cclxuXHJcbiAgd2FybihtZXNzYWdlOiBhbnksIC4uLmFkZGl0aW9uYWw6IGFueVtdKSB7XHJcbiAgfVxyXG5cclxuICBlcnJvcihtZXNzYWdlOiBhbnksIC4uLmFkZGl0aW9uYWw6IGFueVtdKSB7XHJcbiAgfVxyXG5cclxuICBmYXRhbChtZXNzYWdlOiBhbnksIC4uLmFkZGl0aW9uYWw6IGFueVtdKSB7XHJcbiAgfVxyXG5cclxuICB1cGRhdGVDb25maWcoY29uZmlnOiBhbnkpIHtcclxuXHJcbiAgfVxyXG5cclxuICBzZXRDdXN0b21IdHRwSGVhZGVycyhoZWFkZXJzOiBIdHRwSGVhZGVycykge1xyXG4gIH1cclxuXHJcbiAgc2V0Q3VzdG9tUGFyYW1zKHBhcmFtczogSHR0cFBhcmFtcykge1xyXG4gIH1cclxuXHJcbiAgcmVnaXN0ZXJNb25pdG9yKG1vbml0b3I6IE5HWExvZ2dlck1vbml0b3IpIHtcclxuICB9XHJcblxyXG4gIHNldFdpdGhDcmVkZW50aWFsc09wdGlvblZhbHVlKHdpdGhDcmVkZW50aWFsczogYm9vbGVhbikge1xyXG4gIH1cclxuXHJcbiAgZ2V0Q29uZmlnU25hcHNob3QoKTogTG9nZ2VyQ29uZmlnIHtcclxuICAgIHJldHVybiBuZXcgTG9nZ2VyQ29uZmlnKCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==