import { LoggerConfig, LoggerModule, NGXLogger, NGXLoggerHttpService, CustomNGXLoggerService, NGXMapperService } from 'ngx-logger';
import { Injectable, NgModule } from '@angular/core';
import { of } from 'rxjs';

class NGXLoggerMock {
    constructor() {
    }
    trace(message, ...additional) {
    }
    debug(message, ...additional) {
    }
    info(message, ...additional) {
    }
    log(message, ...additional) {
    }
    warn(message, ...additional) {
    }
    error(message, ...additional) {
    }
    fatal(message, ...additional) {
    }
    updateConfig(config) {
    }
    setCustomHttpHeaders(headers) {
    }
    setCustomParams(params) {
    }
    registerMonitor(monitor) {
    }
    setWithCredentialsOptionValue(withCredentials) {
    }
    getConfigSnapshot() {
        return new LoggerConfig();
    }
}
NGXLoggerMock.decorators = [
    { type: Injectable }
];
/** @nocollapse */
NGXLoggerMock.ctorParameters = () => [];

/**
 * CustomNGXLoggerServiceMock is a mock for CustomNGXLoggerService
 */
class CustomNGXLoggerServiceMock {
    constructor() {
    }
    create() {
        // you can inject your own httpService or use the default,
        return new NGXLoggerMock();
    }
}
CustomNGXLoggerServiceMock.decorators = [
    { type: Injectable }
];
/** @nocollapse */
CustomNGXLoggerServiceMock.ctorParameters = () => [];

class NGXLoggerHttpServiceMock {
    constructor() {
    }
    logOnServer(url, message, additional, timestamp, logLevel) {
        return of({});
    }
}
NGXLoggerHttpServiceMock.decorators = [
    { type: Injectable }
];
/** @nocollapse */
NGXLoggerHttpServiceMock.ctorParameters = () => [];

class NGXMapperServiceMock {
    constructor() {
    }
    getCallerDetails() {
        return of({ fileName: 'test.ts', lineNumber: 0, columnNumber: 0 });
    }
}
NGXMapperServiceMock.decorators = [
    { type: Injectable }
];
/** @nocollapse */
NGXMapperServiceMock.ctorParameters = () => [];

class LoggerTestingModule {
}
LoggerTestingModule.decorators = [
    { type: NgModule, args: [{
                imports: [LoggerModule],
                providers: [
                    { provide: NGXLogger, useClass: NGXLoggerMock },
                    { provide: NGXLoggerHttpService, useClass: NGXLoggerHttpServiceMock },
                    { provide: CustomNGXLoggerService, useClass: CustomNGXLoggerServiceMock },
                    { provide: NGXMapperService, useClass: NGXMapperServiceMock }
                ]
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { CustomNGXLoggerServiceMock, LoggerTestingModule, NGXLoggerHttpServiceMock, NGXLoggerMock, NGXMapperServiceMock };
//# sourceMappingURL=ngx-logger-testing.js.map
