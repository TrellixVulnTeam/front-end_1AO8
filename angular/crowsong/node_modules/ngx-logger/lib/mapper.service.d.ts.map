{"version":3,"file":"mapper.service.d.ts","sources":["mapper.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { HttpBackend } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LogPosition } from './types/log-position';\r\nexport declare class NGXMapperService {\r\n    private httpBackend;\r\n    private sourceMapCache;\r\n    private logPositionCache;\r\n    constructor(httpBackend: HttpBackend);\r\n    private static getStackLine;\r\n    private static getPosition;\r\n    private static getTranspileLocation;\r\n    private static getMapFilePath;\r\n    private static getMapping;\r\n    /**\r\n     * does the http get request to get the source map\r\n     * @param sourceMapLocation\r\n     * @param distPosition\r\n     */\r\n    private _getSourceMap;\r\n    /**\r\n     * Returns the LogPosition for the current log\r\n     * If sourceMaps are enabled, it attemps to get the source map from the server, and use that to parse the file name\r\n     * and number of the call\r\n     * @param sourceMapsEnabled\r\n     * @param proxiedSteps\r\n     */\r\n    getCallerDetails(sourceMapsEnabled: boolean, proxiedSteps: number): Observable<LogPosition>;\r\n}\r\n"]}